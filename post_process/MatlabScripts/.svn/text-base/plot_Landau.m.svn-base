%-----------------------------------------------------
%  file : plot_Landau.m
%  date : 2015-02-13
%-----------------------------------------------------

%-----------------------------------------------------
% Analytic expressions of (omega,gamma) for kx0
kx02 = kx0^2;
omega_th0 = sqrt(1+sqrt(1+12*kx02))/sqrt(2);
gamma_th0 = -sqrt(pi/2)*omega_th0/abs(kx0)*exp(-omega_th0^2/(2*kx02))/...
           (2*kx02/omega_th0^3*(1+6*kx02/omega_th0^2));
vphi_th0  = omega_th0/kx0;

disp('=========================')
disp(['    kx0       = ',num2str(kx0)])
disp(['    omega_th0 = ',num2str(omega_th0)])
disp(['    gamma_th0 = ',num2str(gamma_th0)])
disp(['    vphi_th0  = ',num2str(vphi_th0)])
disp('=========================')

% Analytic expressions of (omega,gamma) for any kx
kx       = 1e-2:1e-2:2;
kx2      = kx.^2;
omega_th = sqrt(1+sqrt(1+12*kx2))/sqrt(2);
gamma_th = -sqrt(pi/2)*omega_th./abs(kx).*exp(-omega_th.^2./(2*kx2))./...
           (2*kx2./omega_th.^3.*(1+6*kx2./omega_th.^2));
vphi_th  = omega_th./kx;

figure()
semilogy(kx,omega_th,'-b+',kx,-gamma_th,'-ro',kx,vphi_th,'k');grid
hold on
plot([1 1]*kx0,[1e-3 10],'k--'); hold off
xlabel('kx');ylabel('|gamma| (r)  - omega (b)  - v_{phi} (k)');
title('Linear estimates')
axis([0 kx(end) 1e-3 10])

%-----------------------------------------------------
%*** plot the potential energy ***
figure();
Enpot_th = Enpot(1)*cos(omega_th0*time).^2.*exp(2*gamma_th0*time);
semilogy(time,Enpot,'r+-',time,Enpot_th,'b--'); grid;
xlabel('time'); ylabel('Potential energy')

%-----------------------------------------------------
%*** plot energy conservation ***
Entot      = Enkin+Enpot;
Entot_init = (Enkin(1)+Enpot(1))/2.;
figure();
plot(time,Enkin,'r+-',time,Enpot,'b-o');grid
hold on;
plot(time,Entot-Entot_init,'g+-');
hold off;
legend('Enkin','Enpot','Entot');

%-----------------------------------------------------
%*** plot entropy conservation ***
figure();
semilogy(time,(entropy-entropy(1))./entropy,'r+-'); grid;
xlabel('time'); ylabel('delta Entropy / Entropy')

%-----------------------------------------------------
% real frequency - comparison to theoretical value
[FTPhi_t,omega] = Fourier1D(Phi1D_evol(1,:),time);
figure()
subplot(211)
  plot(time,Phi1D_evol(1,:),'-r.');grid
  xlabel('time'); ylabel('phi(t,x=0)')
subplot(212)
  semilogy(omega,abs(FTPhi_t),'-r.');grid
  xlabel('frequency'); ylabel('|FT[phi(t,x=0)]|')
% index at which the spectrum is maximum
iomega_max = max(find(abs(FTPhi_t)==max(abs(FTPhi_t))));
omega_max = omega(max(iomega_max));
disp('=========================')
disp(['    omega_max = ',num2str(omega_max)])
disp('=========================')
%-----------------------------------------------------
% resonance broadening: width of island
for it=1:Ntime
  [FTPhi(it,:),kx] = Fourier1D(Phi1D_evol(:,it)',xg);
end
ikx_max = max(find(abs(FTPhi(1,:))==max(abs(FTPhi(1,:)))));
delta_v = 4*sqrt(abs(FTPhi(:,ikx_max)));

figure;
dfv_evol = f1Dv_evol-f1Dv_evol(:,1)*ones(1,Ntime);
pcolor(vg,time,dfv_evol');shading('flat');colorbar
hold on;
plot(time*0,time,'k')
plot(vphi_th0*ones(1,Ntime),time,'w');
plot(vphi_th0+delta_v/2,time,'w--',vphi_th0-delta_v/2,time,'w--');
hold off
xlabel('velocity');ylabel('time');title('f(x_0,v,t)-f(x_0,v,0)')

%-----------------------------------------------------
% Small scales in velocity space

figure
for it=1:Ntime
  [FTdfv(it,:),kv] = Fourier1D(dfv_evol(:,it)',vg);
  semilogy(kv,abs(FTdfv(it,:)),'-r.');grid;axis([kv(1) kv(end) 1e-10 1e-2])
  xlabel('k_v');ylabel('|TF \deltaf|');
  title(['it = ',num2str(it),' / ',num2str(Ntime)])
  pause(0.05)
end
dkv = kv(2)-kv(1);

figure
pcolor(kv-dkv/2,time,(abs(FTdfv)));shading('flat');colorbar
xlabel('k_v');ylabel('time')
hold on;
  plot(kx0*time+2*dkv,time,'k--')
  plot(-kx0*time-2*dkv,time,'k--')
hold off
title('Fourier Transform of \deltaf in velocity space')

%-----------------------------------------------------
if (f2D_evol_true==1) 
%-----------------------------------------------------
% f2D plot
fM   = exp(-vg.^2/2)/sqrt(2*pi);
fM2D = ones(Nx,1)*fM';

figure
itdiag = 5;
%for itdiag=1:Ntime
  pcolor(xg,vg,(f2D_evol(:,:,itdiag)-f2D_evol(:,:,1))'); shading('flat'); colorbar();
  hold on;plot([xg(1) xg(end)],vphi_th0*[1 1],'w');hold off
  xlabel('x coordinate'); ylabel('velocity')
  title(['\delta f(x,v) at time ',num2str(time(itdiag)),' / ',num2str(time(end))]) 
%  pause(0.1)
%end
%-----------------------------------------------------
end
%-----------------------------------------------------
